<?php
/**
 * TldTldTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  &quot;Panthera\Openprovider&quot;
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-beta
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace &quot;Panthera\Openprovider&quot;\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * TldTldTest Class Doc Comment
 *
 * @category    Class
 * @description TldTld
 * @package     &quot;Panthera\Openprovider&quot;
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class TldTldTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "TldTld"
     */
    public function testTldTld()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "admin_handle_supported"
     */
    public function testPropertyAdminHandleSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_handle_enabled"
     */
    public function testPropertyBillingHandleEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "billing_handle_supported"
     */
    public function testPropertyBillingHandleSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dnssec_algorithms"
     */
    public function testPropertyDnssecAlgorithms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dnssec_allowed"
     */
    public function testPropertyDnssecAllowed()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dnssec_digests_allowed"
     */
    public function testPropertyDnssecDigestsAllowed()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dnssec_keys_allowed"
     */
    public function testPropertyDnssecKeysAllowed()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dnssec_max_records_amount"
     */
    public function testPropertyDnssecMaxRecordsAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "domicile_available"
     */
    public function testPropertyDomicileAvailable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auth_code_available"
     */
    public function testPropertyIsAuthCodeAvailable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auth_code_changeable"
     */
    public function testPropertyIsAuthCodeChangeable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_auth_code_requested"
     */
    public function testPropertyIsAuthCodeRequested()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_private_whois_allowed"
     */
    public function testPropertyIsPrivateWhoisAllowed()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_trade_auth_code_required"
     */
    public function testPropertyIsTradeAuthCodeRequired()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_transfer_auth_code_required"
     */
    public function testPropertyIsTransferAuthCodeRequired()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "level_prices"
     */
    public function testPropertyLevelPrices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_period"
     */
    public function testPropertyMaxPeriod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_period"
     */
    public function testPropertyMinPeriod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "owner_handle_supported"
     */
    public function testPropertyOwnerHandleSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prices"
     */
    public function testPropertyPrices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quarantine_period"
     */
    public function testPropertyQuarantinePeriod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "renew_available"
     */
    public function testPropertyRenewAvailable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reseller_handle_enabled"
     */
    public function testPropertyResellerHandleEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reseller_handle_supported"
     */
    public function testPropertyResellerHandleSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "restrictions"
     */
    public function testPropertyRestrictions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "soft_quarantine_period"
     */
    public function testPropertySoftQuarantinePeriod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supported_application_mode"
     */
    public function testPropertySupportedApplicationMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supported_idn_scripts"
     */
    public function testPropertySupportedIdnScripts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tech_handle_supported"
     */
    public function testPropertyTechHandleSupported()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "trade_available"
     */
    public function testPropertyTradeAvailable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transfer_available"
     */
    public function testPropertyTransferAvailable()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_count"
     */
    public function testPropertyUsageCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
